{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dcf776d.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if(!match) return null;\r\n    const otherTeam = match.team1 ===teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n      <div className= {isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n          <div>\r\n          <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}> {otherTeam}</Link></h1>\r\n          <h2 className=\"match-date\">{match.date}</h2>\r\n          <h3 className=\"match-venue\">at {match.venue}</h3>\r\n          <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n          </div>\r\n          <div className=\"additional-detail\">\r\n          <h3>First Innings</h3>\r\n          <p>{match.team1}</p>\r\n          <h3>Second Innings</h3>\r\n          <p>{match.team2}</p>\r\n          <h3>Man of the match</h3>\r\n          <p>{match.playerOfMatch}</p>\r\n          <h3>Umpires</h3>\r\n          <p>{match.umpire1}, {match.umpire2}</p>\r\n\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchSmallCard.scss\"\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n      <div className= {isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n         <span className=\"vs\">vs</span>\r\n         <h1><Link to={otherTeamRoute}> {otherTeam}</Link></h1>\r\n         <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n\r\n      </div >\r\n    );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n\r\n            };\r\n            fetchMatches();\r\n        }, [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found</h1>\r\n    }\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                Wins/Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    \r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++ ) {\r\n        years.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n        { years.map(year => (\r\n            <li key={year}>\r\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>\r\n        )) }\r\n        </ol>\r\n    )\r\n\r\n}","import {React , useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n    \r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n    return (\r\n      <div className=\"MatchPage\">\r\n          <div className=\"year-selector\">\r\n              <h3>Select Year</h3>\r\n              <YearSelector teamName={teamName} />\r\n              </div>\r\n          <div>\r\n          <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n          {\r\n              matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)         \r\n          }\r\n          </div>\r\n     </div>\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamTile.scss';\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                    <Link to={`/teams/${teamName}`}>\r\n                        {teamName}\r\n                    </Link>\r\n                </h1>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeam] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n            { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}